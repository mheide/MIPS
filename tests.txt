tests

jump test

instruction memory

		"00000000",	"00000000",	"00000000",	"00000000",	--nop pc=0
		
		jump2.opcode & jump2.address(25 downto 24), jump2.address(23 downto 16), jump2.address(15 downto 8), jump2.address(7 downto 0), --jump to pc64, pc=4
		
		x"00", x"00", x"00", x"00",	--nop pc=8
		
		x"00", x"00", x"00", x"00", --nop pc=12
		
		x"00", x"00", x"00", x"00",	--nop pc=16
		
		"10101100",	"00000010",	"00000000",	"00000100", --pc=20
		
		jal.opcode & jal.address(25 downto 24), jal.address(23 downto 16), jal.address(15 downto 8), jal.address(7 downto 0),	--pc=24

		x"00",	x"00",	x"00",	x"00",	--pc=28 nop

		"00000000",	"00000000", "00000000",	"00000000", --nop pc=32

		"00000000",	"00000000",	"00000000",	"00000000", --nop pc=36
		
		"10001100",	"00000100",	"00000000",	"00000000",	--load pc=40
		
		"10001100",	"00000101",	"00000000",	"00000100", --pc=44

		"10001100",	"00000110",	"00000000",	"00001000", --pc=48

		"10001100",	"00000111",	"00000000",	"00001100",	--pc=52
		
		"00000000",	"00000000",	"00000000",	"00100000",	--nop pc=56

		"00000000",	"00000000",	"00000000",	"00100000",	--pc=60
		
		"00000000",	"00100010",	"00011000",	"00100000",	--add normal pc=64
		
		"00000000", "00100010",	"00111000",	"00100000",	--pc=68
		
		"00000000", "01100110",	"01111000",	"00100000",	--pc=72
		
		"00000000", "01100110",	"11111000",	"00100010",	--sub pc=76
		
		 jump.opcode & jump.address(25 downto 24), jump.address(23 downto 16), jump.address(15 downto 8), jump.address(7 downto 0),--jump pc=80
		 
		 x"00", x"00", x"00", x"00", --pc84
		 x"00", x"00", x"00", x"00", --pc88
		 x"00", x"00", x"00", x"00", --pc92
		 x"00", x"00", x"00", x"00" --pc96

		 
___________________________________________________________


test branch

jumpflag should must not be connected with pc

instruction memory 29 

		"00000000", "00000000", "00000000", "00100000",	--nop

		"00100000", "00000010", "00000000", "00000000", --addi

		"00011100", "00100000", "00000000", "01111110", --bgtz yes

		"00011111", "11000000", "00000000", "01111110", --bgtz no


		"00011100", "00000000", "00000000", "00110000", --bgtz no

		"00011011", "11000000", "00000001", "00000000", --blez yes

		"00011000", "00000000", "00000111", "00000000", --blez yes

		"00011000", "01100000", "00000111", "00000000", --blez no


		"00010000", "01100100", "11111111", "11111110", --beq yes and smaller pc

		"00010000", "01100001", "00000000", "11111111", --beq no

		"00010100", "11100001", "00000111", "11111111", --bne yes

		"00010100", "01100100", "00011111", "00111111", --bne no


		"00110100", "10100100", "01010101", "10101010", --ori

		"10101100", "00000001", "00000000", "00000000",	--store

		"10101100", "00000010", "00000000", "00000100",

		"10101100", "00001011", "00000000", "00001000",	


		"10101100", "00010010", "00000000", "00001100",	

		"00000000", "00000000", "00000000", "00100000", --nop

		"00000000", "00000000", "00000000", "00100000", --nop

		"10001100", "00000100", "00000000", "00000000",	--load


		"10001100", "00000101", "00000000", "00000100",

		"10001100", "00000110", "00000000", "00001000",

		"10001100", "00000111", "00000000", "00001100",	

		"00000000", "00000000", "00000000", "00100000",	--nop


		"00000000", "00000000", "00000000", "00100000",	

		"00000000", "00100010", "00011000", "00100000",	--add normal

		"00000000", "00100010", "00111000", "00100000",	

		"00000000", "01100110", "01111000", "00100000",	


		"00000000", "01100110", "11111000", "00100010"	--sub
		
-----

register file

		"00000000" & "00000000" & "00000000" & "00000000",
		"00000000" & "00000000" & "00000000" & "00000111",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000100" & "01001100" & "00000010",
		"00000000" & "00110000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00011000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00001100" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00100000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010",
		"10000000" & "00000000" & "01001100" & "00000010",
		"00000000" & "00000000" & "01001100" & "00000010"

________________________________________________________________		

memreglock

same configuration as branch

every fourth branch is successfull

